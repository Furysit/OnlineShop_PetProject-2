from fastapi import APIRouter, Depends, HTTPException, status, BackgroundTasks
from sqlalchemy.ext.asyncio import AsyncSession
from sqlalchemy import delete
from app.core.models import db_helper, Cart, User
from fastapi import status
from . import crud

from app.api_v1.orders.schemas import Order
from app.api_v1.users.dependecies import get_user_by_id, get_current_user, admin_required
from app.api_v1.products.dependecies import product_by_id
from app.api_v1.mail_send import sendmessage
from app.api_v1.cart.dependecies import get_cart_by_user_id

router = APIRouter(tags=["Orders"])

@router.get("/my_orders",
            response_model= list[Order],
            status_code=status.HTTP_200_OK,
            summary="–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∑–∞–∫–∞–∑–æ–≤",
            description="–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∑–∞–∫–∞–∑–æ–≤ –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
async def get_orders(
    session: AsyncSession = Depends(db_helper.scoprd_session_dependecy),
    user: User = Depends(get_current_user)
):
    return await crud.get_orders(session=session, user_id=user.id)


@router.post("/create_order", 
            response_model=Order, 
            status_code=status.HTTP_201_CREATED,
            summary="–°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞",
            description="–ë–µ—Ä–µ—Ç –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã –∏ —Å–æ–∑–¥–∞–µ—Ç –∑–∞–∫–∞–∑. –û—Ç—Å—ã–ª–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –ø–æ—á—Ç—É.")
async def create_order(
    background_tasks: BackgroundTasks,
    session: AsyncSession = Depends(db_helper.scoprd_session_dependecy),
    user: User = Depends(get_current_user)
):  
    cart_items = await get_cart_by_user_id(session, user_id=user.id)
    if not cart_items:
        raise HTTPException(status_code=400, detail="–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞")

    order = await crud.create_order(session=session, user_id=user.id)
    await session.execute(delete(Cart).where(Cart.user_id == user.id))
    await session.commit()

    print("üìß –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è...")
    background_tasks.add_task(
    sendmessage,
    username=user.username,
    order_id=order.id,
    total=order.total_price
)
    
    print("üìß –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
    return order


@router.get("/get_order/{order_id}", 
            response_model= Order,
            status_code=status.HTTP_200_OK,
            summary="–ü–æ–ª—É—á–∏—Ç—å –∑–∞–¥–∞–Ω–Ω—ã–π –∑–∞–∫–∞–∑",
            description="–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–∞–∫–∞–∑ —Å –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø—Ä–æ–¥—É–∫—Ç–µ")
async def get_order(
    order_id: int,
    session: AsyncSession = Depends(db_helper.scoprd_session_dependecy),
):
    return await crud.get_order(session=session, order_id=order_id)